<h1>Benvenuto <%= user.name %></h1>
<br><br>
    <form action="/users/logout" method="POST">
        <button type="submit" class="btn btn-primary btn-block" style="width:200px;">Logout</button>
    </form>
    <br><br>
    <form action="/test/error" method="GET">
        <button type="submit" class="btn btn-primary btn-block" style="width:200px;">Get</button>
    </form>
    <br><br>
    <h3>Il tuo cookie scadr√† tra <%= scad %></h3>
    
    <% include ./partials/messages %>
    <br><br>
    <div id="chart"></div>
    <h3>Passeggeri</h3><p id="pas"></p>
    <h3>Latitudine</h3><p id="lat"></p>
    <h3>Longitudine</h3><p id="lon"></p>
    <h3>Movimento</h3><p id="mov"></p>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/5.9.2/d3.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/c3/0.7.0/c3.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.2.0/socket.io.dev.js"></script>
<script>
    var socket = io();
    socket.emit('event');
    var chart = c3.generate({
        bindto: '#chart',
        padding: {
            left: 50,
            right: 50
        },
        point: {
            show: false
        },
        data: {
            type: "spline",
            x: 'x',
            //        xFormat: '%Y%m%d', // 'xFormat' can be used as custom format of 'x'
            columns: [
                ['x', (new Date().getTime()), (new Date().getTime()) - 10000, (new Date().getTime()), (new Date().getTime()) - 20000, (new Date().getTime()), (new Date().getTime()) - 30000, (new Date().getTime()), (new Date().getTime()) - 40000, (new Date().getTime()), (new Date().getTime()) - 50000, (new Date().getTime()), (new Date().getTime()) - 60000],
                ['passeggeri', null, null, null, null, null, null, null],
            ],
            connectNull: true
        },
        axis: {
            x: {
                type: 'timeseries',
                tick: {
                    format: '%H:%M:%S'
                },
                label: {
                    text: 'Time',
                    position: 'outer-center',
                }
            },
            y: {
                max: 70,
                min: 0,
                label: {
                    position: 'outer-middle',
                }
            }
        }
    });
    socket.on('msg',function(data) {
        // var d = new Date(data[0].time)
        // var h = d.getHours();
        // var m = d.getMinutes();
        // var s = d.getSeconds();
        // let date = h + ":" + m + ":" + s;
        chart.flow({
            columns: [
                ['x', (new Date().getTime())],
                ['passeggeri', data[0].personeABordo || 0],
            ],
        });
        $('#pas').html(data[0].personeABordo);
        $('#lat').html(data[0].latitudine);
        $('#lon').html(data[0].longitudine);
        $('#mov').html(data[0].movimento);

    })

    function writeOnChart(data){
        let array = []
        var people = 'passeggeri'
        for(let i = data.length -1 ;i > 1; i--){
            chart.flow({
            columns: [
                ['x', data[i]],
            ],
        });
        }
        // chart.flow({
        //     columns: [
        //         ['x', array],
        //     ],
        // });
        // chart.load({
        //     columns: [
        //         ['x', 0]
        //     ]
        // });
    }
    // setInterval(() => {
    //     chart.flow({
    //         columns: [
    //             ['x', (new Date().getTime())],
    //         ],
    //     });
    //     chart.load({
    //         columns: [
    //             ['x', 1]
    //         ]
    //     });
    // }, 1000);
    // $(document).on('click', 'a.scroll-to-top', function(e) {
    // var $anchor = $(this);
    // $('html, body').stop().animate({
    //   scrollTop: ($($anchor.attr('href')).offset().top)
    // }, 1000, 'easeInOutExpo');
    // e.preventDefault();
//   });
</script>






